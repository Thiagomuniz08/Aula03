// VEICULO
const express = require("express");
const mysql = require("mysql");
const cors = require("cors");

// Configuração da conexão com o banco de dados
const con = mysql.createConnection({
    user: 'root',
    host: 'localhost',
    database: 'transportadora'
});

// Conexão com o banco de dados
con.connect((err) => {
    if (err) {
        console.error('Erro ao conectar ao banco de dados', err);
        return;
    }
    console.log('Conectado ao banco de dados.');
});

// Função de teste
const teste = (req, res) => {
    res.send("Back-end respondendo");
};

// CRUD - Create Veiculo
const createVeiculo = (req, res) => {
    const { placa, capacidade, modelo } = req.body;

    const query = 'INSERT INTO veiculo(placa, capacidade, modelo) VALUES(?, ?, ?)';
    con.query(query, [placa, capacidade, modelo], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.status(201).json({ message: 'Veículo criado com sucesso', result });
        }
    });
};

// CRUD - Read Veiculo
const readVeiculo = (req, res) => {
    con.query("SELECT * FROM veiculo", (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json(result);
        }
    });
};

// CRUD - Update Veiculo
const updateVeiculo = (req, res) => {
    const { modelo, placa, capacidade } = req.body;

    const query = 'UPDATE veiculo SET modelo = ?, capacidade = ? WHERE placa = ?';
    con.query(query, [modelo, capacidade, placa], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Veículo atualizado com sucesso', result });
        }
    });
};

// CRUD - Delete Veiculo
const deleteVeiculo = (req, res) => {
    const { placa } = req.params;

    const query = 'DELETE FROM veiculo WHERE placa = ?';
    con.query(query, [placa], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Veículo removido com sucesso', result });
        }
    });
};


// CLIENTE

// CRUD - Create Cliente
const createCliente = (req, res) => {
    const { nome, endereco, telefone, email } = req.body;

    const query = 'INSERT INTO Cliente(nome, endereco, telefone, email) VALUES(?, ?, ?, ?)';
    con.query(query, [nome, endereco, telefone, email], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.status(201).json({ message: 'Cliente criado com sucesso', result });
        }
    });
};

// CRUD - Read Cliente
const readCliente = (req, res) => {
    con.query("SELECT * FROM Cliente", (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json(result);
        }
    });
};

// CRUD - Update Cliente
const updateCliente = (req, res) => {
    const { nome, endereco, telefone, email } = req.body;

    const query = 'UPDATE Cliente SET nome = ?, endereco = ?, telefone = ? WHERE email = ?';
    con.query(query, [nome, endereco, telefone, email], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Cliente atualizado com sucesso', result });
        }
    });
};

// CRUD - Delete Cliente
const deleteCliente = (req, res) => {
    const { nome } = req.params;

    const query = 'DELETE FROM Cliente WHERE nome = ?';
    con.query(query, [nome], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Cliente removido com sucesso', result });
        }
    });
};

//ROTA

// CRUD - Create Rota
const createRota = (req, res) => {
    const { origem, destino, distancia } = req.body;

    const query = 'INSERT INTO rota (origem, destino, distancia) VALUES(?, ?, ?)';
    con.query(query, [origem, destino, distancia], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.status(201).json({ message: 'Rota criada com sucesso', result });
        }
    });
};

// CRUD - Read Rota
const readRota = (req, res) => {
    con.query("SELECT * FROM rota", (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json(result);
        }
    });
};

// CRUD - Update Rota
const updateRota = (req, res) => {
    const { origem, destino, distancia } = req.body;

    const query = 'UPDATE rota SET destino = ?, distancia = ? WHERE  origem = ?';
    con.query(query, [origem, destino, distancia], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Rota atualizada com sucesso', result });
        }
    });
};

// CRUD - Delete Rota
const deleteRota = (req, res) => {
    const { idRota } = req.params;

    const query = 'DELETE FROM rota WHERE idRota = ?';
    con.query(query, [idRota], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Rota removida com sucesso', result });
        }
    });
};

//ENTREGA

// CRUD - Create Entrega
const createEntrega = (req, res) => {
    const { motorista, inicio, fim, status, placa } = req.body;

    const query = 'INSERT INTO entrega(motorista, inicio, fim, status, placa) VALUES(?, ?, ?, ?, ?)';
    con.query(query, [motorista, inicio, fim, status, placa], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.status(201).json({ message: 'Entrega criada com sucesso', result });
        }
    });
};

// CRUD - Read Entrega
const readEntrega = (req, res) => {
    con.query("SELECT * FROM entrega", (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json(result);
        }
    });
};

// CRUD - Update Entrega
const updateEntrega = (req, res) => {
    const { motorista, inicio, fim, placa, status } = req.body;

    const query = 'UPDATE entrega SET motorista = ?, inicio = ?, fim = ?, placa = ? WHERE status = ?';
    con.query(query, [motorista, inicio, fim, placa, status ], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Veículo atualizado com sucesso', result });
        }
    });
};
// CRUD - Delete Entrega
const deleteEntrega = (req, res) => {
    const { inicio } = req.params;

    const query = 'DELETE FROM entrega WHERE inicio = ?';
    con.query(query, [inicio], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Entrega removida com sucesso', result });
        }
    });
};

//FUNCIONARIOS

// CRUD - Create Funcionarios
const createFuncionario = (req, res) => {
    const { nome, cargo, salario } = req.body;

    const query = 'INSERT INTO Funcionario(nome, cargo, salario) VALUES(?, ?, ?)';
    con.query(query, [nome, cargo, salario], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.status(201).json({ message: 'Funcionario criado com sucesso', result });
        }
    });
};

// CRUD - Read Funcionario
const readFuncionario = (req, res) => {
    con.query("SELECT * FROM Funcionario", (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json(result);
        }
    });
};

// CRUD - Update Funcionario
const updateFuncionario = (req, res) => {
    const { nome,cargo,salario } = req.body;

    const query = 'UPDATE Funcionario SET nome = ?, cargo = ? WHERE salario = ?';
    con.query(query, [nome,cargo,salario], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Funcionario atualizado com sucesso', result });
        }
    });
};

// CRUD - Delete Funcionario
const deleteFuncionario = (req, res) => {
    const { nome } = req.params;

    const query = 'DELETE FROM Funcionario WHERE nome = ?';
    con.query(query, [nome], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'Funcionario removido com sucesso', result });
        }
    });
};

//PEDIDO

// CRUD - Create Pedido
const createpedido = (req, res) => {
    const { dataPedido, valor } = req.body;

    const query = 'INSERT INTO pedido (dataPedido, valor) VALUES(?, ?)';
    con.query(query, [dataPedido, valor ], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.status(201).json({ message: 'pedido criado com sucesso', result });
        }
    });
};

// CRUD - Read pedido
const readpedido = (req, res) => {
    con.query("SELECT * FROM pedido", (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json(result);
        }
    });
};

// CRUD - Update pedido
const updatepedido = (req, res) => {
    const { dataPedido, valor } = req.body;

    const query = 'UPDATE pedido SET dataPedido = ? WHERE valor = ?';
    con.query(query, [dataPedido,valor], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'pedido atualizado com sucesso', result });
        }
    });
};


// CRUD - Delete pedido
const deletepedido = (req, res) => {
    const { valor } = req.params;
    const query = 'DELETE FROM pedido WHERE valor = ?';
    con.query(query, [valor], (err, result) => {
        if (err) {
            res.status(500).json({ error: err.message });
        } else {
            res.json({ message: 'pedido removido com sucesso', result });
        }
    });
};


// Inicialização do servidor
const app = express();
app.use(express.json());
app.use(cors());
app.get("/", teste);

// Veículo
app.post("/veiculo", createVeiculo);
app.get("/veiculo", readVeiculo);
app.put("/veiculo", updateVeiculo);
app.delete("/veiculo/:placa", deleteVeiculo);

// Cliente
app.post("/cliente", createCliente);
app.get("/cliente", readCliente);
app.put("/cliente", updateCliente);
app.delete("/cliente/:idCliente", deleteCliente);

// Rota
app.post("/rota", createRota);
app.get("/rota", readRota);
app.put("/rota/:idRota", updateRota);
app.delete("/rota/:idRota", deleteRota);

//  Entrega
app.post("/Entrega", createEntrega);
app.get("/entrega", readEntrega);
app.put("/entrega", updateEntrega);
app.delete("/entrega/:fim", deleteEntrega);

// Funcionarios
app.post("/Funcionario", createFuncionario);
app.get("/Funcionario", readFuncionario);
app.put("/Funcionario", updateFuncionario);
app.delete("/Funcionario/:placa", deleteFuncionario);

app.post("/pedido", createpedido);
app.get("/pedido", readpedido);
app.put("/pedido", updatepedido);
app.delete("/pedido/:valor", deletepedido);

// Teste de porta
app.listen(3000, () => {
    console.log("Servidor rodando na porta 3000");
});
